# Default server configuration
#
upstream {{ MONITORING_OWNER }}_server {
    # For Unix Socket:
    server unix:{{ WEBSITE_DIR }}/run/gunicorn-monitor.sock fail_timeout=0;

    # For a TCP configuration:
    #server 127.0.0.1:8000 fail_timeout=0;
}

server {
	listen 5000;

	server_name monitor.{{ DOMAIN }};

	root {{ GRAPHITE_DIR }}/webapp/graphite;

	# Add index.php to the list if you are using PHP
	index index.html index.htm;

	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	#ssl on;
	#ssl_certificate /etc/letsencrypt/live/{{ DOMAIN }}/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem;
	
	# enable session resumption to improve https performance
	# http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
	ssl_session_cache shared:SSL:50m;
	ssl_session_timeout 1d;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;

	#enables all versions of TLS, but not SSLv2 or 3 which are weak and now deprecated.
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	#Disables all weak ciphers
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

	#ssl_prefer_server_ciphers on;
	#ssl_dhparam {{ SSL_DIR }}dhparam.pem;
	
	##
	# Let's encrypt validator
	##
	location ~ /.well-known {
		root /etc/nginx/ssl;
                allow all;
        }

	##
	# Gzip Settings
	##

	gzip on;
    	gzip_disable "msie6";

    	gzip_min_length   1000;
    	gzip_vary         on;
    	gzip_proxied      expired no-cache no-store private auth;
    	gzip_buffers      16 8k;
    	gzip_comp_level   2;
    	gzip_http_version 1.1;
    	gzip_types        text/plain text/css applciation/json application/x-javascript text/xml application/xml
                          application/rss+xml text/javascript images/svg+xml application/x-font-ttf font/opentype
                          application/vnd.ms-fontobject;

	##
	# Logs
	##
	access_log     {{ MONITORING_ACCESS_LOG }};
    	error_log      {{ MONITORING_ERROR_LOG }};

	##
	# Nginx Security
	##      
	# Hiding server signature
	server_tokens off;

	# Common bandwidth hoggers and hacking tools.
	## Block user agents
	set $block_user_agents 0;

	if ($http_user_agent ~ "libwww-perl") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "GetRight") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "GetWeb!") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "Go!Zilla") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "Download Demon") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "Go-Ahead-Got-It") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "TurnitinBot") {
	     set $block_user_agents 1;
	}   
	if ($http_user_agent ~ "GrabNet") {
	    set $block_user_agents 1;
	}

	if ($block_user_agents = 1) {
	    return 403;
	}

	
	location /static/ { 
	    alias {{ GRAPHITE_DIR }}/static/; # Static files from nginx instead of uwsgi
	    location ~* .(?:ico|css|gif|jpe?g|png)$ { 
		expires max; 
	    }
	}

	location / {
            proxy_headers_hash_max_size 51200;
            proxy_headers_hash_bucket_size 6400;
            proxy_pass http://{{ MONITORING_OWNER }}_server;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	}
 
	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	
	location ~ /\.ht {
		deny all;
	}
}

server {
	listen 8080;

	server_name monitor.{{ DOMAIN }};

	root {{ GRAPHITE_DIR }}/webapp/graphite;

	# Add index.php to the list if you are using PHP
	index index.html index.htm;

	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	#ssl on;
	#ssl_certificate /etc/letsencrypt/live/{{ DOMAIN }}/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem;
	
	# enable session resumption to improve https performance
	# http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
	ssl_session_cache shared:SSL:50m;
	ssl_session_timeout 1d;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;

	#enables all versions of TLS, but not SSLv2 or 3 which are weak and now deprecated.
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	#Disables all weak ciphers
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

	#ssl_prefer_server_ciphers on;
	#ssl_dhparam {{ SSL_DIR }}dhparam.pem;
	
	##
	# Let's encrypt validator
	##
	location ~ /.well-known {
		root /etc/nginx/ssl;
                allow all;
        }

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	gzip_min_length   1000;    
	gzip_vary         on;
	gzip_proxied      expired no-cache no-store private auth;
	gzip_buffers      16 8k;
	gzip_comp_level   2;
	gzip_http_version 1.1;
	gzip_types        text/plain text/css applciation/json application/x-javascript text/xml application/xml
		          application/rss+xml text/javascript images/svg+xml application/x-font-ttf font/opentype
		          application/vnd.ms-fontobject;

	##
	# Logs
	##
	access_log     {{ MONITORING_ACCESS_LOG }};
    	error_log      {{ MONITORING_ERROR_LOG }};

	##
	# Nginx Security
	##      
	# Hiding server signature
	server_tokens off;

	# Common bandwidth hoggers and hacking tools.
	## Block user agents
	set $block_user_agents 0;

	if ($http_user_agent ~ "libwww-perl") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "GetRight") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "GetWeb!") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "Go!Zilla") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "Download Demon") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "Go-Ahead-Got-It") {
	    set $block_user_agents 1;
	}
	if ($http_user_agent ~ "TurnitinBot") {
	    set $block_user_agents 1;
	}   
	if ($http_user_agent ~ "GrabNet") {
	    set $block_user_agents 1;
	}

	if ($block_user_agents = 1) {
	    return 403;
	}

	location / {
	    proxy_headers_hash_max_size 51200;
	    proxy_headers_hash_bucket_size 6400;
	    proxy_pass http://127.0.0.1:3000/;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header Host $http_host;
	    proxy_redirect off;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
 
	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	
	location ~ /\.ht {
	    deny all;
	}
}
